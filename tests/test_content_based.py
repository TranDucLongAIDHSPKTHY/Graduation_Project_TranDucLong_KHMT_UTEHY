import pickle
import numpy as np
import pandas as pd
import faiss  # Th∆∞ vi·ªán tƒÉng t·ªëc t√¨m ki·∫øm g·∫ßn nh·∫•t

# Load d·ªØ li·ªáu ƒë√£ l∆∞u
with open("save_model/tfidf_vectorizer.pkl", "rb") as f:
    tfidf_vectorizer = pickle.load(f)

with open("save_model/truncated_svd.pkl", "rb") as f:
    svd = pickle.load(f)

tfidf_reduced = np.load("save_model/tfidf_reduced.npy")

# Load th√¥ng tin phim
df_movies = pd.read_csv("data/processed_movies.csv")

# Chu·∫©n h√≥a ti√™u ƒë·ªÅ phim
df_movies['title'] = df_movies['title'].str.lower().str.strip()

# X√¢y d·ª±ng ch·ªâ m·ª•c FAISS ƒë·ªÉ t√¨m ki·∫øm nhanh
vector_dim = tfidf_reduced.shape[1]
index = faiss.IndexFlatL2(vector_dim)
index.add(tfidf_reduced.astype(np.float32))

def recommend_movies(movie_title, top_n=10):
    """G·ª£i √Ω phim d·ª±a tr√™n n·ªôi dung"""
    movie_title = movie_title.lower().strip()  # Chu·∫©n h√≥a ti√™u ƒë·ªÅ t√¨m ki·∫øm
    
    if movie_title not in df_movies['title'].values:
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y phim: {movie_title}")
        return []
    
    movie_idx = df_movies[df_movies['title'] == movie_title].index[0]
    movie_vector = tfidf_reduced[movie_idx].reshape(1, -1).astype(np.float32)
    
    # S·ª≠ d·ª•ng FAISS ƒë·ªÉ t√¨m phim t∆∞∆°ng t·ª±
    _, similar_indices = index.search(movie_vector, top_n + 5)  # L·∫•y th√™m ƒë·ªÉ lo·∫°i tr√πng l·∫∑p
    similar_indices = similar_indices[0][1:]  # Lo·∫°i b·ªè phim g·ªëc
    
    # L·∫•y danh s√°ch phim g·ª£i √Ω v√† lo·∫°i b·ªè tr√πng l·∫∑p
    recommended_movies = df_movies.iloc[similar_indices][['title']].drop_duplicates().head(top_n)
    
    return recommended_movies

# G·ª£i √Ω phim t∆∞∆°ng t·ª± "Man of the House (1995)"
recommended = recommend_movies("major payne 1995")
print("üé• G·ª£i √Ω phim t∆∞∆°ng t·ª± major payne 1995:")
print(recommended)
